package cliente_servidores;


/**
* cliente_servidores/DespachosPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Despachos.idl
* viernes 7 de abril de 2017 12:04:27 AM COT
*/

public abstract class DespachosPOA extends org.omg.PortableServer.Servant
 implements cliente_servidores.DespachosOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("insertarDespachos", new java.lang.Integer (0));
    _methods.put ("insertarFiliales", new java.lang.Integer (1));
    _methods.put ("insertarProductos", new java.lang.Integer (2));
    _methods.put ("insertarConductores", new java.lang.Integer (3));
    _methods.put ("consultaFiliales_id", new java.lang.Integer (4));
    _methods.put ("consultaProductos_id", new java.lang.Integer (5));
    _methods.put ("consultaConductor_id", new java.lang.Integer (6));
    _methods.put ("validarUsuarioServidor1", new java.lang.Integer (7));
    _methods.put ("validarUsuarioServidor2", new java.lang.Integer (8));
    _methods.put ("validarUsuarioServidor3", new java.lang.Integer (9));
    _methods.put ("validarUsuarioCliente", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // cliente_servidores/Despachos/insertarDespachos
       {
         int id_filiales = in.read_long ();
         String nombre_filiales = in.read_wstring ();
         int id_producto = in.read_long ();
         String descripcion_producto = in.read_wstring ();
         int id_conductor = in.read_long ();
         String nombre_conductor = in.read_wstring ();
         String direccion_despacho = in.read_wstring ();
         String fecha_salida = in.read_wstring ();
         String hora_salida = in.read_wstring ();
         String fecha_llegada = in.read_wstring ();
         String hora_llegada = in.read_wstring ();
         String peso_mercancia = in.read_wstring ();
         String autorizo = in.read_wstring ();
         String fecha_creacion = in.read_wstring ();
         int $result = (int)0;
         $result = this.insertarDespachos (id_filiales, nombre_filiales, id_producto, descripcion_producto, id_conductor, nombre_conductor, direccion_despacho, fecha_salida, hora_salida, fecha_llegada, hora_llegada, peso_mercancia, autorizo, fecha_creacion);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // cliente_servidores/Despachos/insertarFiliales
       {
         String nombre = in.read_wstring ();
         String origen = in.read_wstring ();
         String ubicacion = in.read_wstring ();
         String actividad = in.read_wstring ();
         String fecha_creacion = in.read_wstring ();
         int $result = (int)0;
         $result = this.insertarFiliales (nombre, origen, ubicacion, actividad, fecha_creacion);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 2:  // cliente_servidores/Despachos/insertarProductos
       {
         String descripcion = in.read_wstring ();
         int cantidad_stock = in.read_long ();
         String fecha_fabricacion = in.read_wstring ();
         String fecha_vencimiento = in.read_wstring ();
         String fecha_creacion = in.read_wstring ();
         int $result = (int)0;
         $result = this.insertarProductos (descripcion, cantidad_stock, fecha_fabricacion, fecha_vencimiento, fecha_creacion);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // cliente_servidores/Despachos/insertarConductores
       {
         String nombre_completo = in.read_wstring ();
         int edad = in.read_long ();
         String direccion = in.read_wstring ();
         String telefono = in.read_wstring ();
         String experiencia = in.read_wstring ();
         String fecha_creacion = in.read_wstring ();
         int $result = (int)0;
         $result = this.insertarConductores (nombre_completo, edad, direccion, telefono, experiencia, fecha_creacion);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 4:  // cliente_servidores/Despachos/consultaFiliales_id
       {
         String id_filial = in.read_wstring ();
         String $result = null;
         $result = this.consultaFiliales_id (id_filial);
         out = $rh.createReply();
         out.write_wstring ($result);
         break;
       }

       case 5:  // cliente_servidores/Despachos/consultaProductos_id
       {
         String id_producto = in.read_wstring ();
         String $result = null;
         $result = this.consultaProductos_id (id_producto);
         out = $rh.createReply();
         out.write_wstring ($result);
         break;
       }

       case 6:  // cliente_servidores/Despachos/consultaConductor_id
       {
         String id_conductor = in.read_wstring ();
         String $result = null;
         $result = this.consultaConductor_id (id_conductor);
         out = $rh.createReply();
         out.write_wstring ($result);
         break;
       }

       case 7:  // cliente_servidores/Despachos/validarUsuarioServidor1
       {
         String usuario = in.read_wstring ();
         String contrasena = in.read_wstring ();
         int $result = (int)0;
         $result = this.validarUsuarioServidor1 (usuario, contrasena);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 8:  // cliente_servidores/Despachos/validarUsuarioServidor2
       {
         String usuario = in.read_wstring ();
         String contrasena = in.read_wstring ();
         int $result = (int)0;
         $result = this.validarUsuarioServidor2 (usuario, contrasena);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 9:  // cliente_servidores/Despachos/validarUsuarioServidor3
       {
         String usuario = in.read_wstring ();
         String contrasena = in.read_wstring ();
         int $result = (int)0;
         $result = this.validarUsuarioServidor3 (usuario, contrasena);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 10:  // cliente_servidores/Despachos/validarUsuarioCliente
       {
         String usuario = in.read_wstring ();
         String contrasena = in.read_wstring ();
         int $result = (int)0;
         $result = this.validarUsuarioCliente (usuario, contrasena);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:cliente_servidores/Despachos:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Despachos _this() 
  {
    return DespachosHelper.narrow(
    super._this_object());
  }

  public Despachos _this(org.omg.CORBA.ORB orb) 
  {
    return DespachosHelper.narrow(
    super._this_object(orb));
  }


} // class DespachosPOA
